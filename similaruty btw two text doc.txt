Aim: Write a program to compute similarity. between two text document.

In data analysis, Cosine similarity is a measure of similarity between two sequences of numbers. For defining it, the sequences are viewed as vectors in an inner product space, and the Cosine similarity is defined as the cosine similarity is defined as cosine of the angle between them, that is, the dot product of the vectors divided by the product of their lengths. It follows that the cosine similarity does not depend on the magnitudes of vectors, but only on their angle. The cosine similarity always belongs to the interval [1,1]. for example, two proportional vectors have a cosine similarity of I, two orthogonal vectors have a similarity of 0, & two opposite Vectors have similarity of -1, The cosine similarity is particularly used in positive space, where the out come neatly is neat!. bounded in [0,1].

For example, in information retrival of text mining each word is assigned a different coordinate and a document is represented by vector of numbers of occurences of each word in a document.

Cosine similarity then gives a measure of how similar two documents are likely to be, in terms. useful of their subject matter and independently of length of the


import numpy as np
import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity
def cosine_similarity(x,y):
#ensure length of x and y are the same
if len(x)!=len(y):
return None
#compute the dot product of x and y
dot_product=np.dot(x,y)
#compute the magnitude of x and y
magnitude_x=np.sqrt(np.sum(x**2))
magnitude_y=np.sqrt(np.sum(y**2))
#compute the cosine similarity
cosine_similarity=dot_product/(magnitude_x*magnitude_y)
return cosine_similarity
corpus=['data science is one of the most important field of science',
'this is one of the best data science courses',
'data scientist analyse data']
#create a matrix to represent the corpus
x=CountVectorizer().fit_transform(corpus).toarray()
print(x)
cos_sin_1_2=cosine_similarity(x[0,:],x[1,:])
cos_sin_1_3=cosine_similarity(x[0,:],x[2,:])
cos_sin_2_3=cosine_similarity(x[1,:],x[2,:])
print('cosine similarity between:')
print('#t document1 and document2:',cos_sin_1_2)
print('#t document1 and document3:',cos_sin_1_3)
print('#t document2 and document3:',cos_sin_2_3)
